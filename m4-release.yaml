pool:
  vmImage: 'Ubuntu 16.04'
  
variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)' # Go workspace path

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    shopt -s extglob
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'
  
- script: | 
    go get ../...
    go fmt ../...
    go vet ../...
    go test ../... -coverprofile=cover.txt
    go tool cover -html=cover.txt -o cover.html
  workingDirectory: '$(System.DefaultWorkingDirectory)/src/m4/samplewebhook'
  displayName: 'go tasks'    
  
- task: PublishBuildArtifacts@1
  displayName: 'Publish code coverage'
  inputs:
    PathtoPublish: src/m4/samplewebhook/cover.html

    ArtifactName: code-coverage

- script: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo m4/samplewebhook
  workingDirectory: '$(System.DefaultWorkingDirectory)/docker/release'
  displayName: 'build'

- task: Docker@0
  displayName: 'docker build'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: m4

    dockerFile: dockerfile

    workingDirectory: '$(System.DefaultWorkingDirectory)/docker/release'

- task: Docker@0
  displayName: 'docker push'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: m4

    action: 'Push an image'

    includeLatestTag: true

    workingDirectory: '$(System.DefaultWorkingDirectory)/docker/release'

